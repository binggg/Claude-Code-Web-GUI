// Language configuration
const LANGUAGES = {
    en: {
        title: 'Claude Code Web GUI',
        subtitle: 'Browse, view and share your Claude Code sessions - runs entirely in browser',
        github: 'GitHub',
        privacy: {
            title: 'Privacy Protection',
            text: 'Runs entirely locally, supports session sharing, no data uploads'
        },
        features: {
            title: 'Key Features',
            list: [
                'üìÅ **Local Browsing**: Securely view your Claude Code session history',
                'üîó **Easy Sharing**: Share sessions with others via GitHub Gist'
            ]
        },
        instructions: {
            title: 'Get Started:',
            steps: [
                'Click the button below to select the .claude directory',
                'In the file picker, press Cmd+Shift+. (Mac) or Ctrl+H (Windows/Linux) to show hidden files',
                'Find and select the .claude directory (usually in user home directory: ~/)',
                'Start browsing your session history'
            ],
            locations: 'Click the button below to select the .claude directory',
            locationList: []
        },
        selectBtn: 'üìÅ Select .claude directory',
        gistImportBtn: 'üåê View shared sessions',
        loading: 'Loading...',
        sessionHistory: 'Session History',
        searchPlaceholder: 'Search sessions...',
        selectSession: 'Select a session to start viewing',
        welcome: 'Welcome to Claude Code Web GUI',
        welcomeText: 'Please select a session from the left to view conversation records',
        sessionsCount: (total, projects) => `${total} sessions ¬∑ ${projects} projects`,
        timeAgo: {
            justNow: 'Just now',
            minutesAgo: (n) => `${n} minutes ago`,
            hoursAgo: (n) => `${n} hours ago`,
            daysAgo: (n) => `${n} days ago`,
            unknown: 'Unknown time'
        },
        toolUse: 'Tool used',
        toolParams: 'Tool parameters',
        share: 'Share',
        export: 'Export',
        shareSuccess: 'Share link copied to clipboard!',
        shareManual: 'Please manually copy the share link:',
        sharedSession: 'Shared Session',
        shareToX: 'Share to X',
        shareToTwitter: 'Share to X',
        time: 'Time',
        sessionId: 'Session ID',
        sharedNote: 'This is a shared Claude Code session snippet',
        viewApp: 'View Full App',
        projectInfo: 'Project Info',
        openInVSCode: 'Open in VSCode',
        shareSession: 'Share Session',
        shareViaGist: 'Create Gist to Share Session',
        gistDescription: 'Share your complete session history via GitHub Gist, maintaining original JSONL format for easy import.',
        createGist: 'Start Creating Gist',
        downloadMarkdown: 'Download Markdown File',
        markdownDescription: 'Download the session as a Markdown file for sharing',
        download: 'Download',
        copyToClipboard: 'Copy Link',
        copyLinkDescription: 'Copy share link to send to others directly',
        clipboardDescription: 'Copy Markdown content to clipboard',
        copy: 'Copy',
        gistContentCopied: 'Gist content copied to clipboard, opening GitHub Gist page',
        markdownCopied: 'Markdown content copied to clipboard',
        manualCopy: 'Please copy manually:',
        importFromGist: 'View Others\' Shared Sessions',
        gistImportDescription: 'Enter a GitHub Gist URL to view shared session content.',
        gistUrlPlaceholder: 'Enter Gist URL...',
        importGist: 'View Session',
        invalidGistUrl: 'Invalid Gist URL',
        gistFetchFailed: 'Failed to fetch Gist content',
        gistImportError: 'Gist import failed',
        noSessionFileInGist: 'No session file found in Gist',
        noMarkdownInGist: 'No Markdown file found in Gist',
        gistRateLimited: 'GitHub API rate limited, using fallback method...',
        gistFallbackSuccess: 'Successfully loaded Gist content using fallback method',
        importedFromGist: 'Imported from Gist',
        viewOnGitHub: 'View on GitHub',
        backToApp: 'Back to App',
        gistId: 'Gist ID',
        created: 'Created',
        updated: 'Updated',
        format: 'Format',
        importedNote: 'This content was imported from a GitHub Gist',
        pleaseEnterGistUrl: 'Please enter a Gist URL',
        gistImportHelp: 'Gist Import Help',
        manualImport: 'Manual Import',
        manualImportDescription: 'If automatic import fails, you can manually copy Gist content',
        openGistPage: 'Open Gist page',
        copyGistContent: 'Copy file content',
        pasteContentBelow: 'Paste content in the text box below',
        pasteGistContent: 'Paste Gist content...',
        importContent: 'Import Content',
        pleaseEnterContent: 'Please enter content',
        manuallyImported: 'Manually Imported Content',
        gistFallbackInstructions: 'Unable to automatically fetch Gist content. Please:\n1. Open Gist page\n2. Click "Raw" button\n3. Copy the complete URL path\n4. Or copy file content directly to clipboard',
        fabShareTooltip: 'Share Session',
        openVSCodeInstructions: 'VSCode Open Instructions',
        projectPath: 'Project Path',
        vscodeOptions: 'Open Options',
        clickLink: 'Click link to open directly',
        manualOpen: 'Manual open',
        copyPath: 'Copy path to clipboard, then open in VSCode',
        copyPathConfirm: 'Copy path to clipboard?',
        pathCopied: 'Path copied to clipboard',
        chatInputPlaceholder: 'This feature is not yet available, please look forward to future versions...',
        chatInputDisabledTooltip: 'The current version does not support direct conversation with Claude in the page',
        chatSendDisabledTooltip: 'Send function is not yet available',
        send: 'Send',
        back: 'Back',
        noMessagesInShare: 'No messages found in shared session',
        shareLinkLimitation: 'Note: Share links only include the first 10 messages. For complete sessions, please use Gist sharing',
        gistRecommendation: 'Recommended: Contains complete session content, supports original JSONL format, convenient for long-term storage and sharing',
        gistCreationSteps: 'Gist Creation Steps',
        gistStep1: 'Paste the copied content on the opened GitHub page',
        gistStep2: 'Name the file (recommended to use .jsonl extension)',
        gistStep3: 'Add description (optional)',
        gistStep4Public: 'Select "Create public gist" (Important: Must be public for others to access)',
        gistStep5: 'Copy the created Gist URL',
        shareGistUrl: 'Share Gist URL',
        shareGistUrlDesc: 'After creating the Gist, paste the URL below for social media sharing',
        pasteGistUrl: 'Paste created Gist URL...',
        copyImportLink: 'Copy Import Link',
        importLinkCopied: 'Import link copied to clipboard! Users can click this link to directly import the Gist session',
        publicGistReminder: 'Important Reminder',
        publicGistReminderText: 'Only public Gists can be accessed and viewed by others through sharing links. If you create a private Gist, others will not be able to see the session content.',
        gistFlowTitle: 'Sharing Process:',
        gistFlowStep1: 'Click the button below, it will automatically copy session content and open GitHub',
        gistFlowStep2: 'Create a <strong>public Gist</strong> on GitHub page (Important: Must be public for sharing)',
        gistFlowStep3: 'Copy the Gist URL and paste it here to generate sharing link',
        gistFlowStep4: 'Share the link with others, they can click to view session content directly',
        gistDescription2: 'Share your complete session history via GitHub Gist, maintaining original JSONL format for easy import.',
        gistImportDescription2: 'Enter a GitHub Gist URL to view shared session content.',
        gistContentCopiedMessage: '‚úÖ Gist content copied to clipboard!\n\nüìä Content Statistics:\n- Size: {{size}} KB\n- Messages: {{count}} messages',
        gistTruncatedWarning: '\n\n‚ö†Ô∏è Due to Gist size limitations, truncated to first {{count}} messages',
        gistOpeningMessage: '\n\nOpening GitHub Gist creation page...',
        manualCopyGist: 'Please manually copy Gist content',
        sessionInfo: 'Session Info',
        sessionIdLabel: 'Session ID:',
        summaryLabel: 'Summary:',
        projectLabel: 'Project:',
        timeLabel: 'Time:',
        sharedTimeLabel: 'Shared Time:',
        toolCall: 'Tool Call',
        parametersLabel: 'Parameters:',
        gistViewTitle: 'Claude Code Gist View',
        gistViewDescription: 'üìã Claude Code session imported from GitHub Gist: "{{title}}" - View and learn AI programming conversations online',
        formatLabel: 'Format:',
        originalFormat: 'JSONL (Original Format)',
        smartDescription: 'üöÄ Claude Code Smart Programming Session Sharing',
        sessionSharing: 'üí¨ "{{content}}" - Claude Code Session Sharing',
        sessionTitle: '{{title}} - Claude Code Session',
        projectInfo2: 'üìä Project: {{project}} | Time: {{time}}',
        gistCreationInfo: 'üìÖ Created: {{date}} | Format: {{format}}',
        defaultMetaDescription: 'A simple and practical Claude Code session browser that runs entirely in your browser, supporting local browsing, easy sharing, import viewing and other features.',
        defaultOgTitle: 'Claude Code Web GUI - Smart Code Session Browser',
        defaultOgDescription: 'üöÄ Claude Code session browser that runs entirely in your browser, supporting local browsing, easy sharing, privacy protection. No server required, ready to use!',
        viewSharedSessions: 'View Shared Sessions',
        gistAddressInput: 'Enter Gist Address',
        supportedFormats: 'üí° Supported formats:',
        fullUrlFormat: 'Full URL: https://gist.github.com/username/abc123...',
        gistIdFormat: 'Gist ID: abc123def456...',
        gistUrlOrIdPlaceholder: 'Enter Gist URL or ID...',
        viewSession: 'View Session',
        pleaseEnterGistUrlOrId: 'Please enter Gist URL or ID',
        claudeCodeSession: 'Claude Code Session',
        viewThisSession: 'üöÄ View this Claude Code session: "{{title}}"',
        errors: {
            unsupported: 'Your browser does not support the File System Access API. Please use the latest version of Chrome or Edge.',
            accessFailed: 'Failed to access directory',
            loadFailed: 'Failed to load projects',
            sessionLoadFailed: 'Failed to load session details',
            noProjects: 'projects directory not found. Please make sure you selected the correct .claude directory.'
        },
        confirmDialog: {
            title: 'About to open directory selector.',
            instructions: [
                'If you cannot see the .claude directory, please:',
                '‚Ä¢ Mac users: Press Cmd+Shift+. to show hidden files',
                '‚Ä¢ Windows users: Press Ctrl+H to show hidden files', 
                '‚Ä¢ Linux users: Press Ctrl+H to show hidden files',
                '‚Ä¢ Then find the .claude folder in the user home directory'
            ],
            continue: 'Click "OK" to continue selecting directory'
        },
        wrongDirectory: (name) => `You selected directory: ${name}\n\nThis doesn't seem to be the .claude directory. Continue anyway?\n(If this is indeed the correct directory, click "OK" to continue)`
    },
    zh: {
        title: 'Claude Code Web GUI',
        subtitle: 'ÊµèËßàÂíåÊü•ÁúãÊÇ®ÁöÑ Claude Code ‰ºöËØùÂéÜÂè≤ - ÂÆåÂÖ®Âú®ÊµèËßàÂô®‰∏≠ËøêË°åÔºåÊó†ÈúÄÊúçÂä°Âô®',
        github: 'GitHub',
        privacy: {
            title: 'ÈöêÁßÅ‰øùÊä§',
            text: 'Ê≠§Â∫îÁî®ÂÆåÂÖ®Âú®ÊµèËßàÂô®Êú¨Âú∞ËøêË°åÔºå‰∏ç‰ºö‰∏ä‰º†‰ªª‰ΩïÊï∞ÊçÆÂà∞ÊúçÂä°Âô®'
        },
        features: {
            title: '‰∏ªË¶ÅÁâπÊÄß',
            list: [
                'üìÅ **Êú¨Âú∞ÊµèËßà**: ÂÆâÂÖ®Êü•ÁúãÊÇ®ÁöÑClaude Code‰ºöËØùÂéÜÂè≤',
                'üîó **‰æøÊç∑ÂàÜ‰∫´**: ÈÄöËøáGitHub Gist‰∏é‰ªñ‰∫∫ÂàÜ‰∫´‰ºöËØù'
            ]
        },
        instructions: {
            title: '‰ΩøÁî®ËØ¥ÊòéÔºö',
            steps: [
                'ÁÇπÂáª‰∏ãÊñπÊåâÈíÆÈÄâÊã©ÁõÆÂΩï',
                'Âú®Êñá‰ª∂ÈÄâÊã©Âô®‰∏≠ÔºåÊåâ <kbd>Cmd+Shift+.</kbd> (Mac) Êàñ <kbd>Ctrl+H</kbd> (Windows/Linux) ÊòæÁ§∫ÈöêËóèÊñá‰ª∂',
                'ÊâæÂà∞Âπ∂ÈÄâÊã© <code>.claude</code> ÁõÆÂΩïÔºàÈÄöÂ∏∏Âú®Áî®Êà∑‰∏ªÁõÆÂΩï‰∏ãÔºö<code>~/</code>)',
                'ÂºÄÂßãÊµèËßàÊÇ®ÁöÑ‰ºöËØùËÆ∞ÂΩï'
            ],
            locations: 'ÁÇπÂáª‰∏ãÊñπÊåâÈíÆÈÄâÊã© .claude ÁõÆÂΩïÂºÄÂßãÊµèËßà',
            locationList: []
        },
        selectBtn: 'üìÅ ÈÄâÊã© .claude ÁõÆÂΩï',
        gistImportBtn: 'üåê Êü•Áúã‰ªñ‰∫∫ÂàÜ‰∫´ÁöÑ‰ºöËØù',
        loading: 'Ê≠£Âú®Âä†ËΩΩ...',
        sessionHistory: '‰ºöËØùÂéÜÂè≤',
        searchPlaceholder: 'ÊêúÁ¥¢‰ºöËØù...',
        selectSession: 'ÈÄâÊã©‰∏Ä‰∏™‰ºöËØùÂºÄÂßãÊü•Áúã',
        welcome: 'Ê¨¢Ëøé‰ΩøÁî® Claude Code Web GUI',
        welcomeText: 'ËØ∑‰ªéÂ∑¶‰æßÈÄâÊã©‰∏Ä‰∏™‰ºöËØùÂºÄÂßãÊü•ÁúãÂØπËØùËÆ∞ÂΩï',
        sessionsCount: (total, projects) => `${total} ‰∏™‰ºöËØù ¬∑ ${projects} ‰∏™È°πÁõÆ`,
        timeAgo: {
            justNow: 'ÂàöÂàö',
            minutesAgo: (n) => `${n}ÂàÜÈíüÂâç`,
            hoursAgo: (n) => `${n}Â∞èÊó∂Ââç`,
            daysAgo: (n) => `${n}Â§©Ââç`
        },
        toolUse: '‰ΩøÁî®Â∑•ÂÖ∑',
        toolParams: 'Â∑•ÂÖ∑ÂèÇÊï∞',
        share: 'ÂàÜ‰∫´',
        export: 'ÂØºÂá∫',
        shareSuccess: 'ÂàÜ‰∫´ÈìæÊé•Â∑≤Â§çÂà∂Âà∞Ââ™Ë¥¥ÊùøÔºÅ',
        shareManual: 'ËØ∑ÊâãÂä®Â§çÂà∂ÂàÜ‰∫´ÈìæÊé•Ôºö',
        sharedSession: 'ÂàÜ‰∫´ÁöÑ‰ºöËØù',
        shareToTwitter: 'ÂàÜ‰∫´Âà∞X',
        time: 'Êó∂Èó¥',
        sessionId: '‰ºöËØùID',
        sharedNote: 'ËøôÊòØ‰∏Ä‰∏™ÂàÜ‰∫´ÁöÑClaude Code‰ºöËØùÁâáÊÆµ',
        viewApp: 'ËÆøÈóÆÂÆåÊï¥Â∫îÁî®',
        projectInfo: 'È°πÁõÆ‰ø°ÊÅØ',
        openInVSCode: 'Âú®VSCode‰∏≠ÊâìÂºÄ',
        shareSession: 'ÂàÜ‰∫´‰ºöËØù',
        shareViaGist: 'ÈÄöËøáGitHub GistÂàÜ‰∫´',
        gistDescription: 'ÂàõÂª∫‰∏Ä‰∏™GitHub GistÊù•ÂàÜ‰∫´Ëøô‰∏™‰ºöËØù',
        createGist: 'ÂàõÂª∫Gist',
        downloadMarkdown: '‰∏ãËΩΩMarkdownÊñá‰ª∂',
        markdownDescription: '‰∏ãËΩΩ‰ºöËØùÁöÑMarkdownÊñá‰ª∂ËøõË°åÂàÜ‰∫´',
        download: '‰∏ãËΩΩ',
        copyToClipboard: 'Â§çÂà∂ÈìæÊé•',
        copyLinkDescription: 'Â§çÂà∂ÂàÜ‰∫´ÈìæÊé•ÔºåÁõ¥Êé•ÂèëÈÄÅÁªô‰ªñ‰∫∫Êü•Áúã',
        clipboardDescription: 'Â§çÂà∂MarkdownÂÜÖÂÆπÂà∞Ââ™Ë¥¥Êùø',
        copy: 'Â§çÂà∂',
        gistContentCopied: 'GistÂÜÖÂÆπÂ∑≤Â§çÂà∂Âà∞Ââ™Ë¥¥ÊùøÔºåÂ∞ÜÊâìÂºÄGitHub GistÈ°µÈù¢',
        markdownCopied: 'MarkdownÂÜÖÂÆπÂ∑≤Â§çÂà∂Âà∞Ââ™Ë¥¥Êùø',
        manualCopy: 'ËØ∑ÊâãÂä®Â§çÂà∂Ôºö',
        importFromGist: '‰ªéGistÂØºÂÖ•‰ºöËØù',
        gistImportDescription: 'ËæìÂÖ•GitHub Gist URLÊù•Êü•ÁúãÂàÜ‰∫´ÁöÑ‰ºöËØù',
        gistUrlPlaceholder: 'ËæìÂÖ•Gist URL...',
        importGist: 'ÂØºÂÖ•',
        invalidGistUrl: 'Êó†ÊïàÁöÑGist URL',
        gistFetchFailed: 'Ëé∑ÂèñGistÂÜÖÂÆπÂ§±Ë¥•',
        gistImportError: 'GistÂØºÂÖ•Â§±Ë¥•',
        noMarkdownInGist: 'Gist‰∏≠Êú™ÊâæÂà∞MarkdownÊñá‰ª∂',
        gistRateLimited: 'GitHub APIÈ¢ëÁéáÈôêÂà∂Ôºå‰ΩøÁî®Â§áÁî®ÊñπÊ≥ï...',
        gistFallbackSuccess: 'Â∑≤‰ΩøÁî®Â§áÁî®ÊñπÊ≥ïÊàêÂäüÂä†ËΩΩGistÂÜÖÂÆπ',
        importedFromGist: '‰ªéGistÂØºÂÖ•',
        viewOnGitHub: 'Âú®GitHubÊü•Áúã',
        backToApp: 'ËøîÂõûÂ∫îÁî®',
        gistId: 'Gist ID',
        created: 'ÂàõÂª∫Êó∂Èó¥',
        updated: 'Êõ¥Êñ∞Êó∂Èó¥',
        importedNote: 'ËøôÊòØ‰ªéGitHub GistÂØºÂÖ•ÁöÑ‰ºöËØùÂÜÖÂÆπ',
        pleaseEnterGistUrl: 'ËØ∑ËæìÂÖ•Gist URL',
        gistImportHelp: 'GistÂØºÂÖ•Â∏ÆÂä©',
        manualImport: 'ÊâãÂä®ÂØºÂÖ•',
        manualImportDescription: 'Â¶ÇÊûúËá™Âä®ÂØºÂÖ•Â§±Ë¥•ÔºåÊÇ®ÂèØ‰ª•ÊâãÂä®Â§çÂà∂GistÂÜÖÂÆπ',
        openGistPage: 'ÊâìÂºÄGistÈ°µÈù¢',
        copyGistContent: 'Â§çÂà∂Êñá‰ª∂ÂÜÖÂÆπ',
        pasteContentBelow: 'Â∞ÜÂÜÖÂÆπÁ≤òË¥¥Âà∞‰∏ãÊñπÊñáÊú¨Ê°Ü',
        pasteGistContent: 'Á≤òË¥¥GistÂÜÖÂÆπ...',
        importContent: 'ÂØºÂÖ•ÂÜÖÂÆπ',
        pleaseEnterContent: 'ËØ∑ËæìÂÖ•ÂÜÖÂÆπ',
        manuallyImported: 'ÊâãÂä®ÂØºÂÖ•ÁöÑÂÜÖÂÆπ',
        gistFallbackInstructions: 'Êó†Ê≥ïËá™Âä®Ëé∑ÂèñGistÂÜÖÂÆπ„ÄÇËØ∑Ôºö\n1. ÊâìÂºÄGistÈ°µÈù¢\n2. ÁÇπÂáª"Raw"ÊåâÈíÆ\n3. Â§çÂà∂URL‰∏≠ÁöÑÂÆåÊï¥Ë∑ØÂæÑ\n4. ÊàñËÄÖÁõ¥Êé•Â§çÂà∂Êñá‰ª∂ÂÜÖÂÆπÂà∞Ââ™Ë¥¥Êùø',
        fabShareTooltip: 'ÂàÜ‰∫´‰ºöËØù',
        openVSCodeInstructions: 'VSCodeÊâìÂºÄËØ¥Êòé',
        projectPath: 'È°πÁõÆË∑ØÂæÑ',
        vscodeOptions: 'ÊâìÂºÄÊñπÂºè',
        clickLink: 'ÁÇπÂáªÈìæÊé•Áõ¥Êé•ÊâìÂºÄ',
        manualOpen: 'ÊâãÂä®ÊâìÂºÄ',
        copyPath: 'Â§çÂà∂Ë∑ØÂæÑÂà∞Ââ™Ë¥¥ÊùøÔºåÁÑ∂ÂêéÂú®VSCode‰∏≠ÊâìÂºÄ',
        copyPathConfirm: 'ÊòØÂê¶Â§çÂà∂Ë∑ØÂæÑÂà∞Ââ™Ë¥¥ÊùøÔºü',
        pathCopied: 'Ë∑ØÂæÑÂ∑≤Â§çÂà∂Âà∞Ââ™Ë¥¥Êùø',
        chatInputPlaceholder: 'Ê≠§ÂäüËÉΩÊöÇÊú™ÂºÄÊîæÔºåËØ∑ÊúüÂæÖÂêéÁª≠ÁâàÊú¨...',
        chatInputDisabledTooltip: 'ÂΩìÂâçÁâàÊú¨‰∏çÊîØÊåÅÁõ¥Êé•Âú®È°µÈù¢‰∏≠‰∏éClaudeÂØπËØù',
        chatSendDisabledTooltip: 'ÂèëÈÄÅÂäüËÉΩÊöÇÊú™ÂºÄÊîæ',
        send: 'ÂèëÈÄÅ',
        back: 'ËøîÂõû',
        shareLinkLimitation: 'Ê≥®ÊÑèÔºöÂàÜ‰∫´ÈìæÊé•‰ªÖÂåÖÂê´Ââç10Êù°Ê∂àÊÅØÔºåÂ¶ÇÈúÄÂàÜ‰∫´ÂÆåÊï¥‰ºöËØùËØ∑‰ΩøÁî®GistÂäüËÉΩ',
        gistRecommendation: 'Êé®ËçêÔºöÂåÖÂê´ÂÆåÊï¥‰ºöËØùÂÜÖÂÆπÔºåÊîØÊåÅMarkdownÊ†ºÂºèÔºå‰æø‰∫éÈïøÊúü‰øùÂ≠òÂíåÂàÜ‰∫´',
        gistCreationSteps: 'GistÂàõÂª∫Ê≠•È™§',
        gistStep1: 'Âú®ÊâìÂºÄÁöÑGitHubÈ°µÈù¢‰∏≠ÔºåÁ≤òË¥¥Â∑≤Â§çÂà∂ÁöÑÂÜÖÂÆπ',
        gistStep2: '‰∏∫Êñá‰ª∂ÂëΩÂêçÔºàÂª∫ËÆÆ‰ΩøÁî® .jsonl Êâ©Â±ïÂêçÔºâ',
        gistStep3: 'Ê∑ªÂä†ÊèèËø∞ÔºàÂèØÈÄâÔºâ',
        gistStep4: 'ÁÇπÂáª"Create public gist"Êàñ"Create secret gist"',
        gistStep5: 'Â§çÂà∂ÂàõÂª∫ÁöÑGist URL',
        shareGistUrl: 'ÂàÜ‰∫´Gist URL',
        shareGistUrlDesc: 'ÂàõÂª∫GistÂêéÔºåÂ∞ÜURLÁ≤òË¥¥Âà∞‰∏ãÊñπËøõË°åÁ§æ‰∫§Â™í‰ΩìÂàÜ‰∫´',
        pasteGistUrl: 'Á≤òË¥¥ÂàõÂª∫ÁöÑGist URL...',
        shareToX: 'ÂàÜ‰∫´Âà∞X',
        copyImportLink: 'Â§çÂà∂ÂØºÂÖ•ÈìæÊé•',
        importLinkCopied: 'ÂØºÂÖ•ÈìæÊé•Â∑≤Â§çÂà∂Âà∞Ââ™Ë¥¥ÊùøÔºÅÁî®Êà∑ÁÇπÂáªËØ•ÈìæÊé•Âç≥ÂèØÁõ¥Êé•ÂØºÂÖ•Gist‰ºöËØù',
        publicGistReminder: 'ÈáçË¶ÅÊèêÈÜí',
        publicGistReminderText: 'Âè™ÊúâÂÖ¨ÂºÄÁöÑGistÊâçËÉΩË¢´‰ªñ‰∫∫ÈÄöËøáÂàÜ‰∫´ÈìæÊé•Áõ¥Êé•ËÆøÈóÆÂíåÊü•Áúã„ÄÇÂ¶ÇÊûúÂàõÂª∫ÁßÅÊúâGistÔºåÂÖ∂‰ªñ‰∫∫Â∞ÜÊó†Ê≥ïÁúãÂà∞‰ºöËØùÂÜÖÂÆπ„ÄÇ',
        gistFlowTitle: 'ÂàÜ‰∫´ÊµÅÁ®ãÔºö',
        gistFlowStep1: 'ÁÇπÂáª‰∏ãÊñπÊåâÈíÆÔºå‰ºöËá™Âä®Â§çÂà∂‰ºöËØùÂÜÖÂÆπÂπ∂ÊâìÂºÄGitHub',
        gistFlowStep2: 'Âú®GitHubÈ°µÈù¢ÂàõÂª∫<strong>ÂÖ¨ÂºÄGist</strong>ÔºàÈáçË¶ÅÔºöÂøÖÈ°ªÂÖ¨ÂºÄÊâçËÉΩÂàÜ‰∫´Ôºâ',
        gistFlowStep3: 'Â§çÂà∂GistÂú∞ÂùÄÔºåÁ≤òË¥¥Âà∞Êú¨È°µÈù¢ÁîüÊàêÂàÜ‰∫´ÈìæÊé•',
        gistFlowStep4: 'ÂàÜ‰∫´ÈìæÊé•Áªô‰ªñ‰∫∫ÔºåÁÇπÂáªÂç≥ÂèØÁõ¥Êé•Êü•Áúã‰ºöËØùÂÜÖÂÆπ',
        gistDescription2: 'ÈÄöËøáGitHub GistÂàÜ‰∫´ÊÇ®ÁöÑÂÆåÊï¥‰ºöËØùËÆ∞ÂΩïÔºå‰øùÊåÅÂéüÂßãJSONLÊ†ºÂºèÔºå‰æø‰∫é‰ªñ‰∫∫ÂØºÂÖ•Êü•Áúã„ÄÇ',
        gistImportDescription2: 'ËæìÂÖ•‰ªñ‰∫∫ÂàÜ‰∫´ÁöÑGitHub GistÂú∞ÂùÄÔºåÂç≥ÂèØÊü•ÁúãÂÖ∂‰ºöËØùÂÜÖÂÆπ„ÄÇ',
        gistContentCopiedMessage: '‚úÖ GistÂÜÖÂÆπÂ∑≤Â§çÂà∂Âà∞Ââ™Ë¥¥ÊùøÔºÅ\n\nüìä ÂÜÖÂÆπÁªüËÆ°Ôºö\n- Â§ßÂ∞èÔºö{{size}} KB\n- Ê∂àÊÅØÊï∞Ôºö{{count}} Êù°',
        gistTruncatedWarning: '\n\n‚ö†Ô∏è Áî±‰∫éGistÂ§ßÂ∞èÈôêÂà∂ÔºåÂ∑≤Êà™Êñ≠Ëá≥Ââç{{count}}Êù°Ê∂àÊÅØ',
        gistOpeningMessage: '\n\nÂ∞Ü‰∏∫ÊÇ®ÊâìÂºÄGitHub GistÂàõÂª∫È°µÈù¢...',
        manualCopyGist: 'ËØ∑ÊâãÂä®Â§çÂà∂GistÂÜÖÂÆπ',
        sessionInfo: '‰ºöËØù‰ø°ÊÅØ',
        sessionIdLabel: '‰ºöËØùID:',
        summaryLabel: 'ÊëòË¶Å:',
        projectLabel: 'È°πÁõÆ:',
        timeLabel: 'Êó∂Èó¥:',
        sharedTimeLabel: 'ÂàÜ‰∫´Êó∂Èó¥:',
        toolCall: 'Â∑•ÂÖ∑Ë∞ÉÁî®',
        parametersLabel: 'ÂèÇÊï∞:',
        gistViewTitle: 'Claude Code Gist Êü•Áúã',
        gistViewDescription: 'üìã ‰ªé GitHub Gist ÂØºÂÖ•ÁöÑ Claude Code ‰ºöËØùÔºö"{{title}}" - Âú®Á∫øÊü•ÁúãÂíåÂ≠¶‰π† AI ÁºñÁ®ãÂØπËØù',
        formatLabel: 'Ê†ºÂºè:',
        originalFormat: 'JSONL (ÂéüÂßãÊ†ºÂºè)',
        smartDescription: 'üöÄ Claude Code Êô∫ËÉΩÁºñÁ®ã‰ºöËØùÂàÜ‰∫´',
        sessionSharing: 'üí¨ "{{content}}" - Claude Code ‰ºöËØùÂàÜ‰∫´',
        sessionTitle: '{{title}} - Claude Code ‰ºöËØù',
        projectInfo2: 'üìä È°πÁõÆ: {{project}} | Êó∂Èó¥: {{time}}',
        gistCreationInfo: 'üìÖ ÂàõÂª∫: {{date}} | Ê†ºÂºè: {{format}}',
        defaultMetaDescription: '‰∏Ä‰∏™ÁÆÄÊ¥ÅÂÆûÁî®ÁöÑ Claude Code ‰ºöËØùÊµèËßàÂô®ÔºåÂÆåÂÖ®Âú®ÊµèËßàÂô®‰∏≠ËøêË°åÔºåÊîØÊåÅÊú¨Âú∞ÊµèËßà„ÄÅ‰æøÊç∑ÂàÜ‰∫´„ÄÅÂØºÂÖ•Êü•ÁúãÁ≠âÂäüËÉΩ„ÄÇ',
        defaultOgTitle: 'Claude Code Web GUI - Êô∫ËÉΩ‰ª£Á†Å‰ºöËØùÊµèËßàÂô®',
        defaultOgDescription: 'üöÄ ÂÆåÂÖ®Âú®ÊµèËßàÂô®‰∏≠ËøêË°åÁöÑ Claude Code ‰ºöËØùÊµèËßàÂô®ÔºåÊîØÊåÅÊú¨Âú∞ÊµèËßà„ÄÅ‰æøÊç∑ÂàÜ‰∫´„ÄÅÈöêÁßÅ‰øùÊä§„ÄÇÊó†ÈúÄÊúçÂä°Âô®ÔºåÂºÄÁÆ±Âç≥Áî®ÔºÅ',
        viewSharedSessions: 'Êü•Áúã‰ªñ‰∫∫ÂàÜ‰∫´ÁöÑ‰ºöËØù',
        gistAddressInput: 'ËæìÂÖ•GistÂú∞ÂùÄ',
        supportedFormats: 'üí° ÊîØÊåÅÁöÑÊ†ºÂºèÔºö',
        fullUrlFormat: 'ÂÆåÊï¥URLÔºöhttps://gist.github.com/username/abc123...',
        gistIdFormat: 'Gist IDÔºöabc123def456...',
        gistUrlOrIdPlaceholder: 'ËæìÂÖ•Gist URLÊàñID...',
        viewSession: 'Êü•Áúã‰ºöËØù',
        pleaseEnterGistUrlOrId: 'ËØ∑ËæìÂÖ•Gist URLÊàñID',
        claudeCodeSession: 'Claude Code‰ºöËØù',
        viewThisSession: 'üöÄ Êü•ÁúãËøô‰∏™Claude Code‰ºöËØùÔºö"{{title}}"',
        errors: {
            unsupported: 'ÊÇ®ÁöÑÊµèËßàÂô®‰∏çÊîØÊåÅÊñá‰ª∂Á≥ªÁªüËÆøÈóÆ API„ÄÇËØ∑‰ΩøÁî®ÊúÄÊñ∞ÁâàÊú¨ÁöÑ Chrome Êàñ Edge ÊµèËßàÂô®„ÄÇ',
            accessFailed: 'ËÆøÈóÆÁõÆÂΩïÂ§±Ë¥•',
            loadFailed: 'Âä†ËΩΩÈ°πÁõÆÂ§±Ë¥•',
            sessionLoadFailed: 'Âä†ËΩΩ‰ºöËØùËØ¶ÊÉÖÂ§±Ë¥•',
            noProjects: 'Êú™ÊâæÂà∞ projects ÁõÆÂΩï„ÄÇËØ∑Á°Æ‰øùÈÄâÊã©ÁöÑÊòØÊ≠£Á°ÆÁöÑ .claude ÁõÆÂΩï„ÄÇ'
        },
        confirmDialog: {
            title: 'Âç≥Â∞ÜÊâìÂºÄÁõÆÂΩïÈÄâÊã©Âô®„ÄÇ',
            instructions: [
                'Â¶ÇÊûúÁúã‰∏çÂà∞ .claude ÁõÆÂΩïÔºåËØ∑Ôºö',
                '‚Ä¢ MacÁî®Êà∑ÔºöÊåâ Cmd+Shift+. ÊòæÁ§∫ÈöêËóèÊñá‰ª∂',
                '‚Ä¢ WindowsÁî®Êà∑ÔºöÊåâ Ctrl+H ÊòæÁ§∫ÈöêËóèÊñá‰ª∂',
                '‚Ä¢ LinuxÁî®Êà∑ÔºöÊåâ Ctrl+H ÊòæÁ§∫ÈöêËóèÊñá‰ª∂',
                '‚Ä¢ ÁÑ∂ÂêéÂú®Áî®Êà∑‰∏ªÁõÆÂΩï‰∏≠ÊâæÂà∞ .claude Êñá‰ª∂Â§π'
            ],
            continue: 'ÁÇπÂáª"Á°ÆÂÆö"ÁªßÁª≠ÈÄâÊã©ÁõÆÂΩï'
        },
        wrongDirectory: (name) => `ÊÇ®ÈÄâÊã©ÁöÑÁõÆÂΩïÊòØÔºö${name}\n\nËøô‰ºº‰πé‰∏çÊòØ .claude ÁõÆÂΩï„ÄÇÊòØÂê¶ÁªßÁª≠Ôºü\nÔºàÂ¶ÇÊûúÁ°ÆÂÆûÊòØÊ≠£Á°ÆÁöÑÁõÆÂΩïÔºåÁÇπÂáª"Á°ÆÂÆö"ÁªßÁª≠Ôºâ`
    }
};

// Current language state
let currentLang = 'zh';

// Language functions
function t(key, ...params) {
    const keys = key.split('.');
    let value = LANGUAGES[currentLang];
    
    for (const k of keys) {
        value = value[k];
        if (!value) return key;
    }
    
    if (typeof value === 'function') {
        return value(...params);
    }
    
    return value;
}

function switchLanguage(lang) {
    if (lang === currentLang) return;
    
    currentLang = lang;
    localStorage.setItem('claude-gui-lang', lang);
    updateUI();
    
    // Update active language button
    document.querySelectorAll('.lang-btn').forEach(btn => {
        btn.classList.toggle('active', btn.dataset.lang === lang);
    });
}

function updateUI() {
    // Update header content
    const headerTitle = document.querySelector('.header h1');
    const headerSubtitle = document.querySelector('.header p');
    const githubLink = document.querySelector('.github-link');
    
    if (headerTitle) headerTitle.textContent = t('title');
    if (headerSubtitle) headerSubtitle.textContent = t('subtitle');
    if (githubLink) githubLink.innerHTML = `
        <svg class="github-icon" viewBox="0 0 24 24" fill="currentColor">
            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
        </svg>
        ${t('github')}
    `;
    
    // Update privacy notice
    const privacyTitle = document.querySelector('.notice-text strong');
    const privacyText = document.querySelector('.notice-text');
    if (privacyTitle && privacyText) {
        privacyText.innerHTML = `<strong>${t('privacy.title')}</strong>Ôºö${t('privacy.text')}`;
    }
    
    // Update instructions/features
    const instructionsTitle = document.querySelector('.instructions h3');
    const instructionsList = document.querySelector('.instructions ol');
    const locationsTitle = document.querySelector('.instructions p strong');
    
    if (instructionsTitle) {
        // Show features first, then instructions
        instructionsTitle.textContent = t('features.title');
    }
    if (instructionsList) {
        // Combine features and instructions
        const featuresHtml = t('features.list')
            .map(feature => `<li>${feature}</li>`)
            .join('');
        const instructionsHtml = t('instructions.steps')
            .map(step => `<li>${step}</li>`)
            .join('');
        instructionsList.innerHTML = featuresHtml;
        
        // Add instructions title after the features list
        const instructionsSection = document.createElement('div');
        instructionsSection.innerHTML = `
            <h4 style="margin-top: 20px; margin-bottom: 10px; color: #e5e5e5;">${t('instructions.title')}</h4>
            <ol style="margin: 0; padding-left: 20px;">${instructionsHtml}</ol>
        `;
        instructionsList.parentElement.appendChild(instructionsSection);
    }
    if (locationsTitle && locationsTitle.parentElement) {
        locationsTitle.parentElement.innerHTML = `<p><strong>${t('instructions.locations')}</strong></p>`;
    }
    
    // Update buttons
    const accessBtns = document.querySelectorAll('.access-btn');
    if (accessBtns.length >= 1) accessBtns[0].textContent = t('selectBtn');
    if (accessBtns.length >= 2) accessBtns[1].textContent = t('gistImportBtn');
    
    // Update sidebar
    const sidebarBrand = document.querySelector('.sidebar-brand-text');
    if (sidebarBrand) sidebarBrand.textContent = t('title');
    
    // Update search placeholder
    const searchInput = document.querySelector('.search-input');
    if (searchInput) searchInput.placeholder = t('searchPlaceholder');
    
    // Update main title
    const mainTitle = document.querySelector('.main-title');
    if (mainTitle && (mainTitle.textContent.includes('ÈÄâÊã©‰∏Ä‰∏™‰ºöËØù') || mainTitle.textContent.includes('Select a session'))) {
        mainTitle.textContent = t('selectSession');
    }
    
    // Update empty state
    const emptyStateTitle = document.querySelector('.empty-state h3');
    const emptyStateText = document.querySelector('.empty-state p');
    if (emptyStateTitle) emptyStateTitle.textContent = t('welcome');
    if (emptyStateText) emptyStateText.textContent = t('welcomeText');
    
    // Update loading
    const loadingText = document.querySelector('.loading p');
    if (loadingText) loadingText.textContent = t('loading');
    
    // Update action buttons
    const shareText = document.getElementById('share-text');
    const exportText = document.getElementById('export-text');
    const backText = document.getElementById('back-text');
    if (shareText) shareText.textContent = t('share');
    if (exportText) exportText.textContent = t('export');
    if (backText) backText.textContent = t('back');
}

// Initialize language
function initLanguage() {
    // Detect system language
    const browserLang = navigator.language || navigator.userLanguage;
    const isChineseSystem = browserLang.toLowerCase().includes('zh');
    const defaultLang = isChineseSystem ? 'zh' : 'en';
    
    const savedLang = localStorage.getItem('claude-gui-lang') || defaultLang;
    currentLang = savedLang;
    
    // Create language toggle
    const langToggle = document.createElement('div');
    langToggle.className = 'language-toggle';
    langToggle.innerHTML = `
        <button class="lang-btn ${savedLang === 'en' ? 'active' : ''}" data-lang="en" onclick="switchLanguage('en')">EN</button>
        <button class="lang-btn ${savedLang === 'zh' ? 'active' : ''}" data-lang="zh" onclick="switchLanguage('zh')">‰∏≠</button>
    `;
    document.body.appendChild(langToggle);
    
    updateUI();
}

// Export for global use
window.t = t;
window.switchLanguage = switchLanguage;
window.initLanguage = initLanguage;